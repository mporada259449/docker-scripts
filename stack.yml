version: "3.8"

services:
  web:
    image: ghcr.io/mporada259449/web:2.4
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - worker
    deploy:
      replicas: 3
      placement:
        max_replicas_per_node: 2
        constraints:
          - "node.role==worker"
      restart_policy:
        condition: on-failure
        delay: 15s
        window: 60s
      resources:
        limits: 
          cpus: '0.25'
          memory: 500m
    networks:
      app-network:
        aliases:
          - web
          - webserver
    secrets:
      - DBHOST
      - DBNAME
      - DBPASSWORD
      - DBPORT 
      - DBUSER
      - DJANGO_SECRET_KEY
      - DJANGO_SUPERUSER_PASSWORD
      - REDISHOST
    cap_drop:
      - CHOWN
      - DAC_OVERRIDE
      - SYS_CHROOT
      - NET_BIND_SERVICE
      - NET_ADMIN
      - SYS_MODULE
    logging:
      driver: "json-file"
      options:
        max-size: "100M"
        max-file: "5"
    healthcheck:
      test: ["CMD", "python3", "healthcheck_web.py"]
      interval: 2m
      retries: 3
      start_period: 4m 


  redis:
    image: redis@sha256:a954691db2c951a2b0e5de460e154e8bf3ce466c8903d4acb84a15081b38769b
    deploy:
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==manager"
      restart_policy:
        condition: on-failure
        window: 60s
        delay: 5s
      resources:
        limits: 
          cpus: '0.25'
          memory: 500m
    networks:
      app-network:
        aliases:
          - redis
    cap_drop:
      - CHOWN
      - DAC_OVERRIDE
      - SYS_CHROOT
      - NET_BIND_SERVICE
      - NET_ADMIN
      - SYS_MODULE
    logging:
      driver: "json-file"
      options:
        max-size: "100M"
        max-file: "5"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2m
      retries: 3
      start_period: 4m 

  postgres:
    image: postgres@sha256:8b4e94a052578fa74b12b783ed633fb93c96bc6a87906ecf6b4a25382d94afcc
    deploy:
      placement:
        max_replicas_per_node: 1
        constraints:
        - "node.role==manager"
      mode: global
      restart_policy:
        condition: on-failure
        window: 60s
        delay: 5s
      resources:
        limits: 
          cpus: '0.25'
          memory: 500m
    networks:
      app-network:
        aliases:
          - postgres
    volumes:
      - "appdata:/var/lib/postgresql/data"
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/DBPASSWORD
      - POSTGRES_USER_FILE=/run/secrets/DBUSER
      - POSTGRES_DB_FILE=/run/secrets/DBNAME
    secrets:
      - DBUSER
      - DBNAME
      - DBPASSWORD
    cap_drop:
      - SYS_CHROOT
      - NET_BIND_SERVICE
      - NET_ADMIN
      - SYS_MODULE
    logging:
      driver: "json-file"
      options:
        max-size: "100M"
        max-file: "5"
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 2m
      retries: 3
      start_period: 4m 

  celery:
    depends_on:
      - redis
      - postgres
    image: ghcr.io/mporada259449/worker:2.4
    deploy:
      replicas: 4
      placement:
        max_replicas_per_node: 2
        constraints:
          - "node.role==worker"
      restart_policy:
        condition: on-failure
        delay: 15s
        window: 60s
      resources:
        limits: 
          cpus: '0.25'
          memory: 500m
    networks:
      app-network:
        aliases:
          - worker
          - celery-worker
    secrets:
      - DBHOST
      - DBNAME
      - DBPASSWORD
      - DBPORT 
      - DBUSER
      - DJANGO_SECRET_KEY
      - REDISHOST
    cap_drop:
      - CHOWN
      - DAC_OVERRIDE
      - SYS_CHROOT
      - NET_BIND_SERVICE
      - NET_ADMIN
      - SYS_MODULE
    logging:
      driver: "json-file"
      options:
        max-size: "100M"
        max-file: "5"
          
networks:
  app-network:
    driver: overlay
    attachable: false
volumes:
  appdata:
    external: true
    name: appdata
secrets:
  DBHOST:
    external: true
  DBPORT:
    external: true
  DBPASSWORD:
    external: true
  DBUSER:
    external: true
  DBNAME:
    external: true
  DJANGO_SECRET_KEY:
    external: true
  DJANGO_SUPERUSER_PASSWORD:
    external: true
  REDISHOST:
    external: true
